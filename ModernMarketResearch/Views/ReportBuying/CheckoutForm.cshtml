@model ModernMarketResearch.Models.ViewModel.BuyingVM
@{
    //var _OBJBuingForm = new MRSAssignment.Controllers.BuyingInfoController();
    //var CountryNames = _OBJBuingForm.GetCountries();
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">

    function ValidCaptcha1(e) {
        var v = $("#txtInput").val();
        var res = false;
        var obj = {};
        obj.inputcapcha = v;
        $.ajax({
            type: "post",
            url: '@Url.Action("ValidateCaptcha", "BuyingInfo")',
            data: JSON.stringify(obj),
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            async: false,
            success: function (data) {
                res = data;
            },
            error: function (res) {
                alert("Error..." + res.responseText);
            }
        });

        return res;
    }
    $(document).ready(function () {
        $("#btnSubmit").click(function (e) {
            if ($("#Buyingform").valid()) {
                if (ValidCaptcha1()) {
                    $("#Buyingform").submit();
                } else {
                    e.preventDefault();
                    document.getElementById("captchaError").innerHTML = "Not Valid Captcha !.."
                }
            }
        });
    });

</script>

<style type="text/css">
    .rdbmargin {
        margin-left: 80px;
    }

    .validation-summary-errors {
        color: #b94a48;
    }

    .field-validation-error {
        color: #b94a48;
    }
</style>

@using (Html.BeginForm("CheckoutForm", "ReportBuying", FormMethod.Post, new { @class = "form-horizontal", @id = "Buyingform" }))
{
    @Html.ValidationSummary(true)
  
    <div class="row container">
        <div class="col-md-12">
            <span></span>
            <div class="form-group">
                <label class="input-medium col-sm-1" for="name">Title:</label>
                <div class="col-sm-10"><a href="@Url.Action("ReportDetail", "Report", new { @ReportUrl = Model.ReportUrl })">@Model.ReportTitle</a></div>
                @*    @Html.HiddenFor(model => model.RealCaptcha, new { @id = "#txtCaptcha" })*@
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group">
                <div>
                         <label class="input-medium col-sm-1" for="name">Type:</label>
                </div>
                <div class="col-sm-10">
                    @Html.DisplayFor(model => model.Type)
                </div>
            </div>
        </div>
        <div class="col-md-12">
            <div class="form-group">
                <label class="input-medium col-sm-1" for="name">Price:</label>
                <div class="col-sm-10">
                    $ @Html.DisplayFor(model => model.Price)
                </div>
            </div>
        </div>
    </div>
    <div class="row container">
        <div class="divtitle"><strong><span class="glyphicon glyphicon-user"></span>Personal Details (secure with us)</strong> </div>
        <br>
        <div class="col-md-6">
            <div class="form-group">
                <label class="col-md-3 control-label required">Name</label>
                <div class="col-md-8 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-user"></i></span>
                        @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @placeholder = "Enter Name", @id = "name" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Name)
                </div>
                @*
                <label class="input-medium col-sm-4" for="name">Name:</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.Name, new { @class = "form-control inputborder", @id = "name" })
                    @Html.ValidationMessageFor(model => model.Name)
                </div>*@
            </div>

            <div class="form-group">

                <label class="col-md-3 control-label required">E-Mail</label>
                <div class="col-md-8 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-envelope"></i></span>
                        @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control", @placeholder = "myname@example.com", @id = "email" })
                    </div>
                    @Html.ValidationMessageFor(model => model.EmailId)
                </div>

                @*                <label class="input-medium col-sm-4" for="email">Email:</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control inputborder", @id = "email" })
                    @Html.ValidationMessageFor(model => model.EmailId)
                </div>*@
            </div>

            <div class="form-group">

                <label class="col-md-3 control-label required">Phone </label>
                <div class="col-md-3 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                        @*<input class="form-control" id="areacode" name="AreaCode" placeholder="1212" type="text" value="">*@
                        @Html.TextBoxFor(model => model.AreaCode, new { @class = "form-contol areacodebuyingcss", @placeholder = "  Area-Code" })
                    </div>
                     @Html.ValidationMessageFor(model => model.AreaCode)
                    <span class="field-validation-valid"></span>
                </div>
                <div class="col-md-5 inputGroupContainer">
                    @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", @placeholder = "Phone-Number", @id = "phonenumber" })
                    @Html.ValidationMessageFor(model => model.PhoneNumber)
                </div>

                @*                <label class="col-md-3 control-label required">Phone #</label>
                <div class="col-md-2 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-phone"></i></span>
                        @Html.TextBoxFor(model => model.AreaCode, new { @class = "form-contol", @placeholder = "1212" })
                    </div>
                    <span class="field-validation-valid"></span>
                </div>
                <div class="col-md-6 inputGroupContainer">
                    @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control", @placeholder = "555-767-1212", @id = "phonenumber" })
                </div>
                @Html.ValidationMessageFor(model => model.PhoneNumber)*@

            </div>

            <div class="form-group">

                <label class="col-md-3 control-label required">Company</label>
                <div class="col-md-8 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-users"></i></span>
                        @Html.TextBoxFor(model => model.Company, new { @class = "form-control", @placeholder = " Company ", @id = "company" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Company)
                </div>

                @*       <label class="input-medium col-sm-4" for="CompanyName">Company Name:</label>
                <div class="col-sm-7 ">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-users"></i></span>
                        @Html.TextBoxFor(model => model.Company, new { @class = "form-control inputborder", @id = "company" })
                        @Html.ValidationMessageFor(model => model.Company)
                    </div>
                </div>*@

            </div>

            <div class="form-group">
                <label class="col-md-3 control-label required">Designation/Title</label>
                <div class="col-md-8 inputGroupContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-building"></i></span>
                        @Html.TextBoxFor(model => model.Designation, new { @class = "form-control", @placeholder = "Designation/Title", @id = "designation" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Designation)
                </div>
                @*   <label class="input-medium col-sm-4" for="designation">Title/Designation:</label>
                <div class="col-sm-7">
                    @Html.TextBoxFor(model => model.Designation, new { @class = "form-control inputborder", @id = "designation" })
                    @Html.ValidationMessageFor(model => model.Designation)
                </div>*@

            </div>

            <div class="form-group">
                <label class="col-md-3 control-label required">Address:</label>
                <div class="col-md-8 inputGroupContainer">
                    <div class="input-group" style="width: 100%;">
                        @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @id = "address", @placeholder = " Enter Address  " })
                    </div>
                    @Html.ValidationMessageFor(model => model.Address)
                </div>



                @*     <label class="input-medium col-sm-4" for="Address">Address:</label>
                <div class="col-sm-7 ">
                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control radiuszero", rows = "2", @id = "address" })
                    @Html.ValidationMessageFor(model => model.Address)
                </div>*@



            </div>
        </div>
        <div class="col-md-6">

            <div class="form-group">
                <label class="col-md-3 control-label required">Country</label>
                <div class="col-md-8 selectContainer">
                    <div class="input-group">
                        <span class="input-group-addon"><i class="fa fa-plane"></i></span>
                        @Html.DropDownListFor(m => m.Country, from l in new ModernMarketResearch.Models.ViewModel.InquiryVM().GetCountries()
                                                              select new SelectListItem
                                                              {
                                                                  Text = l.nicename,
                                                                  Value = l.nicename.ToString()
                                                              }, "- Select Country -", new { @Class = "form-control", @id = "country" })


                    </div>
                    @Html.ValidationMessageFor(model => model.Country)
                </div>
            </div>

            <div class="form-group">
                <label class="col-md-3 control-label required">City</label>
                <div class="col-sm-8 selectContainer">
                    <div class="input-group" style="width: 100%;">
                        @Html.TextBoxFor(model => model.City, new { @class = "form-control radiuszero", @id = "city" })
                    </div>
                    @Html.ValidationMessageFor(model => model.City)
                </div>
            </div>
            <div class="form-group">

                <label class="col-md-3 control-label required">State:</label>
                <div class="col-sm-8 selectContainer">
                    <div class="input-group" style="width: 100%;">
                        @Html.TextBoxFor(model => model.State, new { @class = "form-control radiuszero", @id = "state" })
                    </div>
                    @Html.ValidationMessageFor(model => model.State)
                </div>


            </div>
            <div class="form-group">
                <label class="col-md-3 control-label required">Zip Code:</label>
                <div class="col-sm-8 selectContainer">
                    <div class="input-group" style="width: 100%;">
                        @Html.TextBoxFor(model => model.Zipcode, new { @class = "form-control radiuszero", @id = "zipcode" })
                    </div>
                    @Html.ValidationMessageFor(model => model.Zipcode)
                </div>

            </div>

            <div class="form-group">
                <label class="input-medium col-sm-4" for="captcha"></label>
                <div class="col-sm-7 ">
                    <img id="CaptchaImg" alt="Captcha" src="@Url.Action("CaptchaImage")" style="" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-md-3 control-label required">Enter captcha:</label>
                <div class="col-sm-8 selectContainer">
                    <div class="input-group" style="width: 100%;">
                        @Html.TextBoxFor(model => model.CaptchaCode, new { @id = "txtInput", @class = "form-control", @placeholder = "Enter Captcha" })
                    </div>
                    @Html.ValidationMessageFor(model => model.CaptchaCode)
                    <p class="help-block">
                        <label id="captchaError" style="color:red"></label>
                    </p>

                </div>
                @* <label class="input-medium col-sm-4" for="captcha">Enter captcha:</label>
                <div class="col-sm-7 ">
                    @Html.TextBoxFor(model => model.CaptchaCode, new { @id = "txtInput", @class = "form-control", @placeholder = "Enter Captcha" })
                    @Html.ValidationMessageFor(model => model.CaptchaCode)
                    <p class="help-block">
                        <label id="captchaError"></label>
                    </p>
                    
                </div>*@
            </div>
        </div>
    </div>
   
    @Html.HiddenFor(model => model.CustomerId)
    @Html.HiddenFor(model => model.CustomerMessage)
    @Html.HiddenFor(model => model.Type)
    @Html.HiddenFor(model => model.ReportId)
    @Html.HiddenFor(model => model.ReportTitle)
    @Html.HiddenFor(model => model.ReportUrl)
    @Html.HiddenFor(model => model.Price)
    <div class="row container">
        <input data-val="true" data-val-required="Payment type is required." id="hdnPaymentType" name="PaymentType" type="hidden" value="" />
        <div class="divtitle"><strong><span class="glyphicon glyphicon-shopping-cart"></span>Please select your preferred payment type <span class="field-validation-valid" data-valmsg-for="PaymentType" data-valmsg-replace="true"></span></strong></div>
        <div class="col-sm-2 gaywayicon"></div>

        @*   <div class="testpaymode">
            <div class="alert alert-danger">
                <strong>HDFC payment gateway activated for testing only.</strong><br />
                If you want to purchase report, please <strong>do not choose HDFC option</strong>.
            </div>
        </div>*@

        <div class="col-sm-2 gaywayicon">
            <label>
                <input type="radio" name="paymentmode" value="paypal" id="RadioGroup1_1" style="margin-left: 85px;" checked onchange="jsPaymentType(this)" />
                <img src="~/Images/paypal.jpg" class="img-responsive" />
            </label>
        </div>

        <div class="col-sm-2 gaywayicon">
            <label>
                <input type="radio" name="paymentmode" value="wireTransfer" id="RadioGroup1_3" style="margin-left: 85px;" onchange="jsPaymentType(this)" />
                <img src="~/Images/wire-transfer.png" class="img-responsive" />
            </label>
        </div>
    </div>
    <div class="row container">
        <div class="col-sm-2">
            <div class="form-group">
                <br />
                <div class=" col-sm-7 gaywayicon">
                    <button type="submit" id="btnSubmit" class="btn btn-warning btnsize"><strong>Checkout</strong></button>
                </div>
            </div>
        </div>
    </div>
}






